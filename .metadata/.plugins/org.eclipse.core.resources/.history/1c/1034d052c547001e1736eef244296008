package 분할정복.백만_개의_정수_정렬_14229;

import java.util.Arrays;
import java.util.Scanner;

public class Solution {

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
		int N = 10;
		int M = 5;
		int[] A = Arrays.stream(sc.nextLine().split(" ")).mapToInt(Integer::parseInt).toArray();
		mergeSort(A, 0, N);
		System.out.println(A[M]);
		
		sc.close();
	}
	
	
	public static void mergeSort(int[] arr, int left, int right) {
		if (left < right) {
			int mid = (left + right) / 2;
			mergeSort(arr, left, mid);
			mergeSort(arr, mid + 1, right);
			merge(arr, left, mid, right);
		}
	}
	
	public static void merge(int[] arr, int left, int mid, int right) {
		int L = left, R = mid + 1, idx = left;
		int[] sortedArr = new int[arr.length];
		while (L <= mid && R < right) {
			if (arr[L] < arr[R]) sortedArr[idx++] = arr[L++];
			else sortedArr[idx++] = arr[R++];
		}
		if (L <= mid) {
			for (int i = L; i <= mid; i++) {
				sortedArr[idx++] = arr[i];
			}
		} else {
			for (int j = R; j < right; j++) {
				sortedArr[idx++] = arr[j];
			}
		}
		
		for (int i = left; i < right; i++) {
			arr[i] = sortedArr[i];
		}
	}
}