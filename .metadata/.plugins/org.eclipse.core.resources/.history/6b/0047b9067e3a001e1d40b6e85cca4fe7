package String.회문2;

import java.io.File;
import java.io.IOException;
import java.util.Arrays;
import java.util.Scanner;

public class Solution {

	public static void main(String[] args) throws IOException {
//		Scanner sc = new Scanner(System.in);
		Scanner sc = new Scanner(new File("C:\\Users\\SSAFY\\Desktop\\APS\\SWEA\\src\\String\\회문2\\input.txt"));

		int T = 10;
		int N = 100;

		for (int t = 1; t <= T; t++) {
			sc.nextInt();
			char[][] map = new char[N][N];
			for (int r = 0; r < N; r++) {
				String line = sc.next();
				for (int c = 0; c < N; c++) {
					map[r][c] = line.charAt(c);
				}
			}

			int longestH = 0;
			int longestV = 0;
			boolean stopH = false;
			boolean stopV = false;
			int ans = 0;
			for (int r = 0; r < N - 1; r++) {
				for (int c = 0; c < N - 1; c++) {
					length: for (int i = N - 1; i > 0; i--) {
						boolean flagH = true;
						boolean flagV = true;
						for (int j = c; j < (i - c) / 2 + c; j++) {
							if (flagH) {
								if (map[r][j] != map[r][i - j]) {
									flagH = false;
								}
							}
							if (flagV) {
								if (map[j][r] != map[i - j][r]) {
									flagV = false;
								}
							}
							
							if (!(flagH || flagV)) break;
						}
						if (flagH) {
							longestH = i - c;
							stopH = true;
						}
						if (flagV) {
							longestV = i - c;
							stopV = true;
						}
						if (flagH || flagV) {
							ans = Math.max(ans,  Math.max(longestH, longestV));
						}
					}

				}
			}
			System.out.println(String.format("#%d %d", t, ans));
		}

		sc.close();
	}

}
