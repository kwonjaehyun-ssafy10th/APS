package 분할정복.백만_개의_정수_정렬_14229;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Arrays;

public class Solution {

    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

        int N = 10;
        int M = 5;

        String input = br.readLine();
        String[] tokens = input.split(" ");

        int[] A = Arrays.stream(tokens).mapToInt(Integer::parseInt).toArray();
        mergeSort(A, 0, N - 1);
        System.out.println(A[M]);

        br.close();
    }

    public static void mergeSort(int[] arr, int left, int right) {
        if (left < right) {
            int mid = (left + right) / 2;
            mergeSort(arr, left, mid);
            mergeSort(arr, mid + 1, right);
            merge(arr, left, mid, right);
        }
    }

    public static void merge(int[] arr, int left, int mid, int right) {
        int L = left, R = mid + 1, idx = left;
        int[] sortedArr = new int[arr.length];
        while (L <= mid && R <= right) {
            if (arr[L] < arr[R]) sortedArr[idx++] = arr[L++];
            else sortedArr[idx++] = arr[R++];
        }
        while (L <= mid) {
            sortedArr[idx++] = arr[L++];
        }
        while (R <= right) {
            sortedArr[idx++] = arr[R++];
        }

        for (int i = left; i <= right; i++) {
            arr[i] = sortedArr[i];
        }
    }
}